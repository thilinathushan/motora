name: Build and Deploy Laravel App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # =================================================================
      #  PART 1: CHECKOUT AND BUILD THE DOCKER IMAGE
      #  (This part was already correct and is essential)
      # =================================================================

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Make sure your repo name matches. e.g., 'motora'
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
          # Use caching for faster builds in the future
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # =================================================================
      #  PART 2: DEPLOY THE IMAGE TO THE AZURE VM
      #  (This is the new, improved, and consolidated section)
      # =================================================================

      - name: Copy compose.yaml to VM
        # We only copy the compose file. The .env will be created from a secret,
        # and all other application code is inside the Docker image.
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "compose.yaml"
          target: "~/motora-app"

      - name: Deploy and Run on VM
        # This single step securely creates the environment file and restarts the application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Navigate to the application directory on the VM
            cd ~/motora-app

            # Create the .env.docker file directly on the VM from the GitHub Secret
            # This is the most secure and reliable method.
            echo "${{ secrets.PROD_ENV_FILE }}" > .env.docker
            echo "âœ… .env.docker file created on VM."

            # Docker Compose will now read both compose.yaml and the new .env.docker file.
            # It uses DOCKER_USERNAME from the .env file to pull the right image.

            # Pull the latest version of the image we just pushed
            docker compose pull

            # Bring down the old stack and remove any stale volumes to prevent permission issues
            docker compose down --volumes

            # Start the new stack in detached mode
            docker compose up -d

            echo "ðŸš€ Deployment to Azure VM successful!"
