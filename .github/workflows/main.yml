name: Motora Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ===============================================================
      #  PART 1: BUILD AND PUSH DOCKER IMAGE (This part is correct)
      # ===============================================================

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
          build-args: |
            APP_URL=${{ secrets.PROD_APP_URL }}
            CACHE_BUSTER=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          no-cache: true

      # ===============================================================
      #  PART 2: DEPLOY TO VM (This is the simplified, correct part)
      # ===============================================================

      - name: Create deployment archive
        # We bundle everything needed for deployment into a single tarball.
        # This includes the compose file and the entire docker-compose directory.
        run: tar -czf deploy.tar.gz compose.yaml docker-compose/

      - name: Copy deployment archive to VM
        # We only need to copy this one single file.
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: "deploy.tar.gz"
          target: "~/motora-app"

      - name: Deploy and Run on VM
        # This single step securely creates the environment file, unpacks the
        # archive, and restarts the application.
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # Navigate to the home directory first.
            cd ~

            # Ensure the app directory exists.
            mkdir -p motora-app

            # Go into the app directory.
            cd motora-app

            # Stop and remove any old running containers.
            docker compose down

            # Grant ownership to the current user to fix any permission errors
            # from previous failed runs.
            # sudo is needed here to reclaim ownership from root if necessary.
            sudo chown -R $USER:$USER .

            # --- DEPLOY NEW VERSION ---

            # Unpack the new archive, overwriting any old files.
            # The 'tar' command is coming from the scp-action in the previous step
            # which places it in the target directory (`~/motora-app`).
            tar -xzf deploy.tar.gz
            echo "âœ… Deployment archive unpacked."

            # Create the .env file securely from the GitHub Secret.
            echo "${{ secrets.PROD_ENV_FILE }}" > .env
            echo "âœ… .env file created on VM."

            # Now, Docker Compose will find everything it needs:
            # compose.yaml, .env, and the docker-compose/nginx/ directory.

            # Pull the latest image for the app service to ensure we have it.
            docker compose pull app

            # Start the new stack in detached mode.
            # The --build flag tells it to build any images that have a 'build' section.
            docker compose up -d --build

            echo "ðŸš€ Deployment to Azure VM successful!"
